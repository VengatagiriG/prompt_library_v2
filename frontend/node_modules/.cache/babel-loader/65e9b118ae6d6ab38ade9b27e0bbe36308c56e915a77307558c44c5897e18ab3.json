{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  timeout: 10000\n});\n\n// Request interceptor for authentication\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default api;\n\n// API functions for different resources\nexport const authAPI = {\n  login: credentials => api.post('/api/auth/login/', credentials),\n  register: userData => api.post('/api/auth/register/', userData),\n  getProfile: () => api.get('/api/auth/me/'),\n  updateProfile: data => api.put('/api/auth/update_profile/', data)\n};\nexport const promptsAPI = {\n  getPrompts: (params = {}) => api.get('/api/prompts/', {\n    params\n  }),\n  getPrompt: id => api.get(`/api/prompts/${id}/`),\n  createPrompt: data => api.post('/api/prompts/', data),\n  updatePrompt: (id, data) => api.put(`/api/prompts/${id}/`, data),\n  deletePrompt: id => api.delete(`/api/prompts/${id}/`),\n  toggleFavorite: id => api.post(`/api/prompts/${id}/favorite/`),\n  usePrompt: id => api.post(`/api/prompts/${id}/use/`),\n  getFavorites: () => api.get('/api/prompts/favorites/'),\n  searchPrompts: (query, params = {}) => api.get('/api/prompts/search/', {\n    params: {\n      q: query,\n      ...params\n    }\n  }),\n  getPromptStats: () => api.get('/api/prompts/stats/')\n};\nexport const categoriesAPI = {\n  getCategories: (params = {}) => api.get('/api/prompts/categories/', {\n    params\n  }),\n  getCategory: id => api.get(`/api/prompts/categories/${id}/`),\n  createCategory: data => api.post('/api/prompts/categories/', data),\n  updateCategory: (id, data) => api.put(`/api/prompts/categories/${id}/`, data),\n  deleteCategory: id => api.delete(`/api/prompts/categories/${id}/`),\n  getCategoryStats: () => api.get('/api/prompts/categories/stats/')\n};\nexport const exportAPI = {\n  exportPrompts: (format = 'json', params = {}) => {\n    return api.get('/api/prompts/export/', {\n      params: {\n        format,\n        ...params\n      },\n      responseType: 'blob'\n    });\n  },\n  importPrompts: (file, format = 'json') => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post(`/api/prompts/import/?format=${format}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","getProfile","get","updateProfile","data","put","promptsAPI","getPrompts","params","getPrompt","id","createPrompt","updatePrompt","deletePrompt","delete","toggleFavorite","usePrompt","getFavorites","searchPrompts","query","q","getPromptStats","categoriesAPI","getCategories","getCategory","createCategory","updateCategory","deleteCategory","getCategoryStats","exportAPI","exportPrompts","format","responseType","importPrompts","file","formData","FormData","append"],"sources":["C:/codes6/prompt_library_v2/prompt_library_v2/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  timeout: 10000,\n});\n\n// Request interceptor for authentication\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      // Handle unauthorized access\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n\n// API functions for different resources\nexport const authAPI = {\n  login: (credentials) => api.post('/api/auth/login/', credentials),\n  register: (userData) => api.post('/api/auth/register/', userData),\n  getProfile: () => api.get('/api/auth/me/'),\n  updateProfile: (data) => api.put('/api/auth/update_profile/', data),\n};\n\nexport const promptsAPI = {\n  getPrompts: (params = {}) => api.get('/api/prompts/', { params }),\n  getPrompt: (id) => api.get(`/api/prompts/${id}/`),\n  createPrompt: (data) => api.post('/api/prompts/', data),\n  updatePrompt: (id, data) => api.put(`/api/prompts/${id}/`, data),\n  deletePrompt: (id) => api.delete(`/api/prompts/${id}/`),\n  toggleFavorite: (id) => api.post(`/api/prompts/${id}/favorite/`),\n  usePrompt: (id) => api.post(`/api/prompts/${id}/use/`),\n  getFavorites: () => api.get('/api/prompts/favorites/'),\n  searchPrompts: (query, params = {}) => api.get('/api/prompts/search/', {\n    params: { q: query, ...params }\n  }),\n  getPromptStats: () => api.get('/api/prompts/stats/'),\n};\n\nexport const categoriesAPI = {\n  getCategories: (params = {}) => api.get('/api/prompts/categories/', { params }),\n  getCategory: (id) => api.get(`/api/prompts/categories/${id}/`),\n  createCategory: (data) => api.post('/api/prompts/categories/', data),\n  updateCategory: (id, data) => api.put(`/api/prompts/categories/${id}/`, data),\n  deleteCategory: (id) => api.delete(`/api/prompts/categories/${id}/`),\n  getCategoryStats: () => api.get('/api/prompts/categories/stats/'),\n};\n\nexport const exportAPI = {\n  exportPrompts: (format = 'json', params = {}) => {\n    return api.get('/api/prompts/export/', {\n      params: { format, ...params },\n      responseType: 'blob'\n    });\n  },\n  importPrompts: (file, format = 'json') => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post(`/api/prompts/import/?format=${format}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}