{"ast":null,"code":"var _jsxFileName = \"C:\\\\codes6\\\\prompt_library_v2\\\\prompt_library_v2\\\\frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Configure axios defaults\n  axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  useEffect(() => {\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // Verify token validity\n      checkAuthStatus();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const response = await axios.get('/api/auth/me/');\n      setUser(response.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      // Token is invalid, remove it\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      delete axios.defaults.headers.common['Authorization'];\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login/', {\n        username,\n        password\n      });\n      const {\n        access,\n        refresh,\n        user: userData\n      } = response.data;\n\n      // Store tokens\n      localStorage.setItem('accessToken', access);\n      localStorage.setItem('refreshToken', refresh);\n\n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access}`;\n      setUser(userData);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post('/api/auth/register/', userData);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    // Remove tokens\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n\n    // Remove axios default header\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const refreshToken = async () => {\n    try {\n      const refresh = localStorage.getItem('refreshToken');\n      if (!refresh) {\n        throw new Error('No refresh token');\n      }\n      const response = await axios.post('/api/auth/refresh/', {\n        refresh\n      });\n      const {\n        access\n      } = response.data;\n\n      // Update access token\n      localStorage.setItem('accessToken', access);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access}`;\n      return access;\n    } catch (error) {\n      // Refresh failed, logout user\n      logout();\n      throw error;\n    }\n  };\n\n  // Axios response interceptor for token refresh\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(response => response, async error => {\n      var _error$response3;\n      const originalRequest = error.config;\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        try {\n          const newAccessToken = await refreshToken();\n          originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n          return axios(originalRequest);\n        } catch (refreshError) {\n          logout();\n          return Promise.reject(refreshError);\n        }\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.response.eject(interceptor);\n    };\n  }, []);\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"b4+7DbNXBEPJ9yvfWqnHeolhh+c=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","defaults","baseURL","process","env","REACT_APP_API_URL","token","localStorage","getItem","headers","common","checkAuthStatus","response","get","data","error","removeItem","login","username","password","post","access","refresh","userData","setItem","success","_error$response","_error$response$data","register","_error$response2","_error$response2$data","logout","refreshToken","interceptor","interceptors","use","_error$response3","originalRequest","config","status","_retry","newAccessToken","refreshError","Promise","reject","eject","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/codes6/prompt_library_v2/prompt_library_v2/frontend/src/hooks/useAuth.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext({});\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Configure axios defaults\n  axios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  useEffect(() => {\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // Verify token validity\n      checkAuthStatus();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const response = await axios.get('/api/auth/me/');\n      setUser(response.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      // Token is invalid, remove it\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      delete axios.defaults.headers.common['Authorization'];\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login/', {\n        username,\n        password,\n      });\n\n      const { access, refresh, user: userData } = response.data;\n\n      // Store tokens\n      localStorage.setItem('accessToken', access);\n      localStorage.setItem('refreshToken', refresh);\n\n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access}`;\n\n      setUser(userData);\n      setIsAuthenticated(true);\n\n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Login failed'\n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await axios.post('/api/auth/register/', userData);\n      return { success: true, data: response.data };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Registration failed'\n      };\n    }\n  };\n\n  const logout = () => {\n    // Remove tokens\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n\n    // Remove axios default header\n    delete axios.defaults.headers.common['Authorization'];\n\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  const refreshToken = async () => {\n    try {\n      const refresh = localStorage.getItem('refreshToken');\n      if (!refresh) {\n        throw new Error('No refresh token');\n      }\n\n      const response = await axios.post('/api/auth/refresh/', {\n        refresh,\n      });\n\n      const { access } = response.data;\n\n      // Update access token\n      localStorage.setItem('accessToken', access);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access}`;\n\n      return access;\n    } catch (error) {\n      // Refresh failed, logout user\n      logout();\n      throw error;\n    }\n  };\n\n  // Axios response interceptor for token refresh\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        const originalRequest = error.config;\n\n        if (error.response?.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true;\n\n          try {\n            const newAccessToken = await refreshToken();\n            originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n            return axios(originalRequest);\n          } catch (refreshError) {\n            logout();\n            return Promise.reject(refreshError);\n          }\n        }\n\n        return Promise.reject(error);\n      }\n    );\n\n    return () => {\n      axios.interceptors.response.eject(interceptor);\n    };\n  }, []);\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}